services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - api
      - user-service
      - user
    restart: unless-stopped
    networks:
      - app-network

  # API Gateway / Main API Service
  api: 
    build:
      context: ./api
      dockerfile: Dockerfile
    expose:
      - "5000"
    environment:
      - NODE_ENV=production
      - USER_SERVICE_URL=http://user-service:3001
      - JWT_SECRET=your-jwt-secret-key-change-this-in-production
      - MONGO_URI=mongodb://admin:password@mongodb:27017/mrsplayground?authSource=admin
    depends_on:
      - user-service
      - redis
      - mongodb
    restart: unless-stopped
    networks:
      - app-network

  # User & Auth Microservice
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    expose:
      - "3001"
    volumes:
      - user_uploads:/app/uploads
    environment:
      - NODE_ENV=production
      - DB_HOST=userdb
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=userapi
      - DB_PORT=3306
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-jwt-secret-key-change-this-in-production
      - EMAIL_USER=your-email@gmail.com
      - EMAIL_PASS=your-email-password
    depends_on:
      - userdb
      - redis
    restart: unless-stopped
    networks:
      - app-network

  # Frontend Service
  user:
    build:
      context: ./user
      dockerfile: Dockerfile
    expose:
      - "3000"
    volumes:
      - ./user:/app
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost/api
    restart: unless-stopped
    networks:
      - app-network

  # MySQL Database for User Service
  userdb:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=userapi
    expose:
      - "3306"
    volumes:
      - userdb_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - app-network

  # Redis for Session Management
  redis:
    image: redis:7-alpine
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - app-network

  # MongoDB for other services (optional)
  mongodb:
    image: mongo:6
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    expose:
      - "27017"
    volumes:
      - mongodb_data:/data/db
    restart: unless-stopped
    networks:
      - app-network

volumes:
  userdb_data:
  redis_data:
  mongodb_data:
  user_uploads:

networks:
  app-network:
    driver: bridge
